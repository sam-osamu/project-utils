version: '2'
services:
  mysql:
    build:
      context: ./mysql
    env_file: ./.env
    volumes:
      # 起動時に読ませたいSQLはここに置く
      - ./mysql/init:/docker-entrypoint-initdb.d
      # DBのデータそのものがここに置かれる
      - ./mysql/data:/var/lib/mysql

  phpmyadmin:
    build:
      context: ./phpmyadmin
    env_file: ./.env
    ports:
      # 8081ポートでコンテナの外に公開する
      - '8081:80'
    volumes:
      # セッション関係の自動生成ファイルが置かれる
      - ./phpmyadmin/sessions:/sessions
      # phpMyAdminのソースが置かれる
      - ./phpmyadmin/src:/var/www/html
    depends_on:
      - mysql

  app:
    build:
      context: ./app
      args:
        USER_NAME: $USER_NAME
        USER_ID: $USER_ID
        GROUP_ID: $GROUP_ID
    env_file: ./.env
    volumes:
      # ソースはここに置く
      - ./src:/var/www/html
      # リポジトリがフロントとバックで別れている場合はマウント先を分けてもいい
      # - ./app/src:/var/www/html
    depends_on:
      - mysql

  web:
    build:
      context: ./web
      args:
        USER_NAME: $USER_NAME
        USER_ID: $USER_ID
        GROUP_ID: $GROUP_ID
    env_file: ./.env
    ports:
      # 8080ポートでコンテナの外に公開する
      - '8080:80'
    volumes:
      # ソースはここに置く
      - ./src:/var/www/html
      # リポジトリがフロントとバックで別れている場合はマウント先を分けてもいい
      # - ./web/src:/var/www/html
    depends_on:
      - app

  cron:
    build:
      context: ./cron
    env_file: ./.env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  db-data:
